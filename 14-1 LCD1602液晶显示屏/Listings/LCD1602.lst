C51 COMPILER V9.60.7.0   LCD1602                                                           06/27/2024 11:25:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Users\a111\Documents\keil\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>
   3          
   4          sbit LCD_RS = P2^6;
   5          sbit LCD_RW = P2^5;
   6          sbit LCD_E = P2^7;
   7          #define LCD_DataPort P0
   8          
   9          void LCD_Delay(void)    //@11.0592MHz 1ms
  10          {
  11   1              unsigned char data i, j;
  12   1      
  13   1              _nop_();
  14   1              i = 2;
  15   1              j = 199;
  16   1              do
  17   1              {
  18   2                      while (--j);
  19   2              } while (--i);
  20   1      }
  21          
  22          
  23          void LCD_WriteCommand(unsigned char Command)
  24          {
  25   1              LCD_RS = 0;
  26   1              LCD_RW = 0;
  27   1              LCD_DataPort = Command;
  28   1              LCD_E = 1;
  29   1              LCD_Delay(); 
  30   1              LCD_E = 0;
  31   1              LCD_Delay();
  32   1      }
  33          
  34          void LCD_WriteData(unsigned char Data)
  35          {
  36   1              LCD_RS = 1;
  37   1              LCD_RW = 0;
  38   1              LCD_DataPort = Data;
  39   1              LCD_E = 1;
  40   1              LCD_Delay(); 
  41   1              LCD_E = 0;
  42   1              LCD_Delay();    
  43   1      }
  44          
  45          void LCD_Init(void)
  46          {
  47   1              LCD_WriteCommand(0x38);
  48   1              LCD_WriteCommand(0x0C);
  49   1              LCD_WriteCommand(0x06);
  50   1              LCD_WriteCommand(0x01);
  51   1      }
  52          
  53          void LCD_SetCursor(unsigned char Line, Column)
  54          {
C51 COMPILER V9.60.7.0   LCD1602                                                           06/27/2024 11:25:58 PAGE 2   

  55   1              if(Line == 1)
  56   1              {
  57   2                      LCD_WriteCommand(0x80 | (Column - 1));
  58   2              }
  59   1              else
  60   1              {
  61   2                      LCD_WriteCommand(0x80 | (Column - 1) + 0x40);           
  62   2              }       
  63   1      }
  64          
  65          void LCD_ShowChar(unsigned char Line, Column, Char)
  66          {
  67   1              LCD_SetCursor(Line, Column);
  68   1              LCD_WriteData(Char);
  69   1      }
  70          
  71          void LCD_ShowString(unsigned char Line, Column, unsigned char *String)
  72          {
  73   1              unsigned char i;
  74   1              LCD_SetCursor(Line, Column);
  75   1              for(i = 0;String[i] != '\0';i++)
  76   1              {
  77   2                      LCD_WriteData(String[i]);
  78   2              }
  79   1      }
  80          
  81          int LCD_Pow(int X, Y)
  82          {
  83   1              unsigned char i;
  84   1              int Result = 1;
  85   1              for(i = 0;i < Y;i++)
  86   1              {
  87   2                      Result *= X;
  88   2              }
  89   1              return Result;
  90   1      }
  91          
  92          void LCD_ShowNum(unsigned char Line, Column, unsigned int Number, unsigned char Length)
  93          {
  94   1              unsigned char i;
  95   1              LCD_SetCursor(Line, Column);
  96   1              for(i = Length;i > 0;i--)
  97   1              {
  98   2                      LCD_WriteData('0' + Number/LCD_Pow(10, i-1)%10);
  99   2              }
 100   1      }
 101          
 102          void LCD_ShowSignedNum(unsigned char Line, Column, int Number, unsigned char Length)
 103          {
 104   1              unsigned char i;
 105   1              unsigned int Number1;
 106   1              LCD_SetCursor(Line, Column);
 107   1              if(Number >= 0)
 108   1              {
 109   2                      LCD_WriteData('+');
 110   2                      Number1 = Number;
 111   2              }
 112   1              else
 113   1              {
 114   2                      LCD_WriteData('-');
 115   2                      Number1 = -Number;
 116   2              }
C51 COMPILER V9.60.7.0   LCD1602                                                           06/27/2024 11:25:58 PAGE 3   

 117   1              for(i = Length;i > 0;i--)
 118   1              {
 119   2                      LCD_WriteData('0' + Number1/LCD_Pow(10, i-1)%10);
 120   2              }       
 121   1      }
 122          
 123          void LCD_ShowHexNum(unsigned char Line, Column, unsigned int Number, unsigned char Length)
 124          {
 125   1              unsigned char i;
 126   1              unsigned char SingleNumber;
 127   1              LCD_SetCursor(Line, Column);
 128   1              for(i = Length;i > 0;i--)
 129   1              {
 130   2                      SingleNumber = Number/LCD_Pow(16, i-1)%16;
 131   2                      if(SingleNumber < 10)
 132   2                      {
 133   3                              LCD_WriteData('0' + SingleNumber);
 134   3                      }
 135   2                      else
 136   2                      {
 137   3                              LCD_WriteData('A' + SingleNumber - 10);
 138   3                      }
 139   2              }
 140   1      }
 141          
 142          void LCD_ShowBinNum(unsigned char Line, Column, unsigned int Number, unsigned char Length)
 143          {
 144   1              unsigned char i;
 145   1              LCD_SetCursor(Line, Column);
 146   1              for(i = Length;i > 0;i--)
 147   1              {
 148   2                      LCD_WriteData('0' + Number/LCD_Pow(2, i-1)%2);
 149   2              }       
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
